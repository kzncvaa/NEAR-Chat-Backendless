{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Backendless NEAR API"
  },
  "host": "eu-api.backendless.com",
  "basePath": "/2338D9E8-6A00-A259-FF96-7507DF32AB00/85CC4222-DDCB-493C-AB87-910AC242C844",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "userTokenHeader": {
      "type": "apiKey",
      "in": "header",
      "name": "user-token"
    }
  },
  "security": [
    {
      "userTokenHeader": []
    }
  ],
  "paths": {
    "/services/NEAR/parse_seed_phrase": {
      "post": {
        "summary": "getPrivateKey method",
        "tags": [
          "NEAR API Service"
        ],
        "parameters": [
          {
            "name": "seed_phrase",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful invocation",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          }
        }
      }
    },
    "/services/NEAR/balance": {
      "get": {
        "summary": "Balance method",
        "tags": [
          "NEAR API Service"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful invocation",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          }
        }
      }
    },
    "/services/NEAR/login": {
      "post": {
        "summary": "Login method",
        "tags": [
          "NEAR API Service"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "account_id": {
                  "type": "string"
                },
                "callback_url": {
                  "type": "string"
                },
                "network": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful invocation",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          }
        }
      }
    },
    "/services/NEAR/transfer": {
      "post": {
        "summary": "transferNFT method",
        "tags": [
          "NEAR API Service"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "token_id": {
                  "type": "string"
                },
                "receiver_id": {
                  "type": "string"
                },
                "enforce_owner_id": {
                  "type": "string"
                },
                "memo": {
                  "type": "string"
                },
                "enforce_private_key": {
                  "type": "string"
                },
                "contract": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful invocation",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          }
        }
      }
    },
    "/services/NEAR/view": {
      "post": {
        "summary": "view method",
        "tags": [
          "NEAR API Service"
        ],
        "responses": {
          "200": {
            "description": "successful invocation",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          }
        }
      }
    },
    "/services/NEAR/call": {
      "post": {
        "summary": "sendMessage method",
        "tags": [
          "NEAR API Service"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "account_id": {
                  "type": "string"
                },
                "private_key": {
                  "type": "string"
                },
                "text": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          }
        }
      }
    },
    "/services/NEAR/send": {
      "post": {
        "summary": "transaction method",
        "tags": [
          "NEAR API Service"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "sender_id": {
                  "type": "string"
                },
                "receiver_id": {
                  "type": "string"
                },
                "deposit": {
                  "type": "string"
                },
                "callback_url": {
                  "type": "string"
                },
                "network": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful invocation",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          }
        }
      }
    },
    "/services/NEAR/deploy": {
      "post": {
        "summary": "deployContract method",
        "tags": [
          "NEAR API Service"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "account_id": {
                  "type": "string"
                },
                "private_key": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful invocation",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          }
        }
      }
    },
    "/services/NEAR/getInfo": {
      "post": {
        "summary": "getInfoByTransaction method",
        "tags": [
          "NEAR API Service"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "transactionHashes": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful invocation",
            "schema": {
              "$ref": "#/definitions/getInfoByTransaction_ResultObject"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          }
        }
      }
    },
    "/services/NEAR/mint_nft": {
      "post": {
        "summary": "mintNFT method",
        "tags": [
          "NEAR API Service"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "token_id": {
                  "type": "string"
                },
                "metadata": {
                  "type": "string"
                },
                "account_id": {
                  "type": "string"
                },
                "private_key": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "summary": "Register a new User",
        "tags": [
          "UserService"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "online": {
                  "type": "boolean",
                  "default": "false"
                },
                "password": {
                  "type": "string"
                },
                "oAuthIdentities": {
                  "type": "string"
                },
                "blUserLocale": {
                  "type": "string",
                  "default": "en"
                },
                "accountType": {
                  "type": "string"
                }
              },
              "required": [
                "username",
                "password",
                "blUserLocale"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "online": {
                  "type": "boolean"
                },
                "ownerId": {
                  "type": "string"
                },
                "objectId": {
                  "type": "string"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                },
                "oAuthIdentities": {
                  "type": "string"
                },
                "blUserLocale": {
                  "type": "string"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "userStatus": {
                  "type": "string"
                },
                "socialAccount": {
                  "type": "string"
                },
                "accountType": {
                  "type": "string"
                },
                "lastLogin": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          }
        }
      }
    },
    "/users/restorepassword/{userIdentity}": {
      "get": {
        "summary": "Restore User Password",
        "tags": [
          "UserService"
        ],
        "parameters": [
          {
            "name": "userIdentity",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User Identity"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "User Login",
        "tags": [
          "UserService"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "login": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "online": {
                  "type": "boolean"
                },
                "ownerId": {
                  "type": "string"
                },
                "objectId": {
                  "type": "string"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                },
                "oAuthIdentities": {
                  "type": "string"
                },
                "blUserLocale": {
                  "type": "string"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "userStatus": {
                  "type": "string"
                },
                "socialAccount": {
                  "type": "string"
                },
                "accountType": {
                  "type": "string"
                },
                "lastLogin": {
                  "type": "string",
                  "format": "date-time"
                },
                "user-token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          }
        }
      }
    },
    "/users/register/guest": {
      "post": {
        "summary": "User Login as Guest",
        "tags": [
          "UserService"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "user-token": {
                  "type": "string"
                },
                "objectId": {
                  "type": "string"
                },
                "userStatus": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "summary": "User Logout",
        "tags": [
          "UserService"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "409": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BackendlessError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "getInfoByTransaction_ResultObject": {
      "type": "object",
      "properties": {
        "transaction": {
          "type": "object"
        }
      }
    },
    "BackendlessError": {
      "type": "object",
      "description": "Backendless Error",
      "properties": {
        "code": {
          "type": "number"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}